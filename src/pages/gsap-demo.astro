---
import Layout from '../layouts/Layout.astro';
import HeroGSAP from '../components/HeroGSAP.astro';
import StatsGSAP from '../components/StatsGSAP.astro';
import ProjectsGSAP from '../components/ProjectsGSAP.astro';
import AnimationShowcase from '../components/AnimationShowcase.astro';
---

<Layout title="Portfolio - GSAP Enhanced">
	<main class="gsap-page">
		<HeroGSAP
			title="Creative Developer"
			subtitle="Hello, I'm"
			description="I craft immersive digital experiences that blend creativity with cutting-edge technology."
		/>

		<StatsGSAP />

		<AnimationShowcase />

		<ProjectsGSAP />

		<!-- Contact Section -->
		<section id="contact" class="contact-gsap">
			<div class="container">
				<div class="contact-content">
					<div class="contact-header">
						<span class="section-label">Get in Touch</span>
						<h2 class="section-title">
							<span class="title-word">Let's Create</span>
							<span class="title-word gradient-text">Something Amazing</span>
						</h2>
						<p class="contact-description">
							I'm always open to discussing new projects, creative ideas, or opportunities to be part of your vision.
						</p>
					</div>

					<div class="contact-methods">
						<a href="mailto:hello@example.com" class="contact-card magnetic-contact">
							<div class="contact-icon">
								<svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
									<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
									<polyline points="22,6 12,13 2,6"></polyline>
								</svg>
							</div>
							<div class="contact-info">
								<span class="contact-label">Email</span>
								<span class="contact-value">hello@example.com</span>
							</div>
						</a>

						<a href="https://github.com" target="_blank" rel="noopener noreferrer" class="contact-card magnetic-contact">
							<div class="contact-icon">
								<svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
									<path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
								</svg>
							</div>
							<div class="contact-info">
								<span class="contact-label">GitHub</span>
								<span class="contact-value">@yourusername</span>
							</div>
						</a>

						<a href="https://linkedin.com" target="_blank" rel="noopener noreferrer" class="contact-card magnetic-contact">
							<div class="contact-icon">
								<svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
									<path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
								</svg>
							</div>
							<div class="contact-info">
								<span class="contact-label">LinkedIn</span>
								<span class="contact-value">/in/yourprofile</span>
							</div>
						</a>

						<a href="https://twitter.com" target="_blank" rel="noopener noreferrer" class="contact-card magnetic-contact">
							<div class="contact-icon">
								<svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
									<path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
								</svg>
							</div>
							<div class="contact-info">
								<span class="contact-label">Twitter</span>
								<span class="contact-value">@yourhandle</span>
							</div>
						</a>
					</div>
				</div>
			</div>
		</section>
	</main>
</Layout>

<style>
	:root {
		--bg-primary: #0a0a0f;
		--bg-secondary: #13131a;
		--text-primary: #ffffff;
		--text-secondary: #a0a0b0;
		--accent-primary: #6366f1;
		--accent-secondary: #8b5cf6;
		--border-color: #2a2a35;
	}

	.gsap-page {
		background: var(--bg-primary);
		color: var(--text-primary);
		min-height: 100vh;
	}

	/* Contact Section */
	.contact-gsap {
		padding: 10rem 0;
		background: linear-gradient(180deg, var(--bg-primary) 0%, rgba(13, 13, 26, 0.8) 100%);
		position: relative;
		overflow: hidden;
	}

	.contact-gsap::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 1px;
		background: linear-gradient(90deg, transparent, rgba(99, 102, 241, 0.5), transparent);
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.contact-content {
		max-width: 900px;
		margin: 0 auto;
	}

	.contact-header {
		text-align: center;
		margin-bottom: 5rem;
	}

	.section-label {
		display: inline-block;
		padding: 0.5rem 1.5rem;
		background: rgba(99, 102, 241, 0.1);
		border: 1px solid rgba(99, 102, 241, 0.3);
		border-radius: 50px;
		color: var(--accent-primary);
		font-size: 0.875rem;
		font-weight: 600;
		letter-spacing: 0.1em;
		text-transform: uppercase;
		margin-bottom: 2rem;
	}

	.section-title {
		font-size: clamp(3rem, 6vw, 5rem);
		font-weight: 900;
		line-height: 1.2;
		margin-bottom: 1.5rem;
		letter-spacing: -0.02em;
	}

	.title-word {
		display: inline-block;
		margin-right: 1rem;
	}

	.gradient-text {
		background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #ec4899 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.contact-description {
		font-size: 1.25rem;
		color: var(--text-secondary);
		line-height: 1.8;
		max-width: 600px;
		margin: 0 auto;
	}

	.contact-methods {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
		gap: 2rem;
	}

	.contact-card {
		display: flex;
		align-items: center;
		gap: 1.5rem;
		padding: 2rem;
		background: rgba(15, 15, 26, 0.5);
		border: 1px solid rgba(255, 255, 255, 0.05);
		border-radius: 20px;
		text-decoration: none;
		color: inherit;
		transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
		backdrop-filter: blur(10px);
		position: relative;
		overflow: hidden;
		will-change: transform;
	}

	.contact-card::before {
		content: '';
		position: absolute;
		inset: 0;
		background: linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.1));
		opacity: 0;
		transition: opacity 0.5s ease;
	}

	.contact-card:hover {
		border-color: rgba(99, 102, 241, 0.5);
		transform: translateY(-5px);
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
	}

	.contact-card:hover::before {
		opacity: 1;
	}

	.contact-icon {
		flex-shrink: 0;
		width: 64px;
		height: 64px;
		display: flex;
		align-items: center;
		justify-content: center;
		background: rgba(99, 102, 241, 0.1);
		border-radius: 16px;
		color: var(--accent-primary);
		transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
		position: relative;
		z-index: 1;
	}

	.contact-card:hover .contact-icon {
		background: rgba(99, 102, 241, 0.2);
		transform: scale(1.1) rotateZ(5deg);
	}

	.contact-info {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		position: relative;
		z-index: 1;
	}

	.contact-label {
		font-size: 0.875rem;
		color: var(--text-secondary);
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.05em;
	}

	.contact-value {
		font-size: 1.125rem;
		font-weight: 700;
		color: var(--text-primary);
	}

	/* Responsive */
	@media (max-width: 768px) {
		.contact-gsap {
			padding: 6rem 0;
		}

		.contact-header {
			margin-bottom: 3rem;
		}

		.section-title {
			font-size: 2.5rem;
		}

		.contact-methods {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.contact-card {
			padding: 1.5rem;
		}
	}
</style>

<script>
	import { gsap } from 'gsap';
	import { ScrollTrigger } from 'gsap/ScrollTrigger';

	gsap.registerPlugin(ScrollTrigger);

	// Smooth scroll
	document.querySelectorAll('a[href^="#"]').forEach(anchor => {
		anchor.addEventListener('click', function (e) {
			e.preventDefault();
			const target = document.querySelector(this.getAttribute('href') as string);
			if (target) {
				gsap.to(window, {
					duration: 1.5,
					scrollTo: { y: target, offsetY: 80 },
					ease: 'power4.inOut'
				});
			}
		});
	});

	// Animate contact section header
	gsap.from('.contact-header .section-label', {
		scrollTrigger: {
			trigger: '.contact-header',
			start: 'top 80%',
			end: 'bottom 60%',
			toggleActions: 'play none none reverse'
		},
		y: 50,
		opacity: 0,
		duration: 0.8,
		ease: 'power3.out'
	});

	gsap.from('.contact-header .title-word', {
		scrollTrigger: {
			trigger: '.contact-header',
			start: 'top 80%',
			end: 'bottom 60%',
			toggleActions: 'play none none reverse'
		},
		y: 80,
		opacity: 0,
		stagger: 0.2,
		duration: 1,
		ease: 'power4.out'
	});

	gsap.from('.contact-description', {
		scrollTrigger: {
			trigger: '.contact-header',
			start: 'top 80%',
			end: 'bottom 60%',
			toggleActions: 'play none none reverse'
		},
		y: 30,
		opacity: 0,
		duration: 0.8,
		delay: 0.4,
		ease: 'power3.out'
	});

	// Animate contact cards
	const contactCards = gsap.utils.toArray('.contact-card');

	contactCards.forEach((card: any, index) => {
		gsap.from(card, {
			scrollTrigger: {
				trigger: card,
				start: 'top 85%',
				end: 'top 50%',
				toggleActions: 'play none none reverse'
			},
			y: 60,
			opacity: 0,
			duration: 0.8,
			delay: index * 0.1,
			ease: 'power3.out'
		});
	});

	// Magnetic effect for contact cards
	const magneticCards = document.querySelectorAll('.magnetic-contact');

	magneticCards.forEach(card => {
		card.addEventListener('mousemove', (e) => {
			const rect = (card as HTMLElement).getBoundingClientRect();
			const x = e.clientX - rect.left - rect.width / 2;
			const y = e.clientY - rect.top - rect.height / 2;

			gsap.to(card, {
				x: x * 0.2,
				y: y * 0.2,
				duration: 0.5,
				ease: 'power2.out'
			});

			// Move icon more dramatically
			const icon = card.querySelector('.contact-icon');
			gsap.to(icon, {
				x: x * 0.3,
				y: y * 0.3,
				duration: 0.5,
				ease: 'power2.out'
			});
		});

		card.addEventListener('mouseleave', () => {
			gsap.to(card, {
				x: 0,
				y: 0,
				duration: 0.8,
				ease: 'elastic.out(1, 0.5)'
			});

			const icon = card.querySelector('.contact-icon');
			gsap.to(icon, {
				x: 0,
				y: 0,
				duration: 0.8,
				ease: 'elastic.out(1, 0.5)'
			});
		});
	});
</script>
